Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

'use babel';

var directoryPath = _path2['default'].resolve(__dirname, '../fixtures');
var directoryForAutoGeneratedPath = _path2['default'].resolve(directoryPath, 'auto-generated');

var FixturesPath = (function () {
  function FixturesPath() {
    _classCallCheck(this, FixturesPath);
  }

  _createClass(FixturesPath, null, [{
    key: 'absolutify',
    value: function absolutify(relativePath) {
      return _path2['default'].resolve(this.DIRECTORY_PATH, relativePath);
    }
  }, {
    key: 'absolutifyAutoGenerated',
    value: function absolutifyAutoGenerated(relativePath) {
      return _path2['default'].resolve(this.DIRECTORY_FOR_AUTO_GENERATED_PATH, relativePath);
    }
  }, {
    key: 'DIRECTORY_PATH',
    value: directoryPath,
    enumerable: true
  }, {
    key: 'DIRECTORY_FOR_AUTO_GENERATED_PATH',
    value: directoryForAutoGeneratedPath,
    enumerable: true
  }, {
    key: 'sampleTextPath',
    get: function get() {
      return this.absolutify('sample.html');
    }
  }, {
    key: 'largeTextPath',
    get: function get() {
      return this.absolutifyAutoGenerated('large.html');
    }
  }, {
    key: 'deepTextPath',
    get: function get() {
      return this.absolutifyAutoGenerated('deep.html');
    }
  }]);

  return FixturesPath;
})();

exports['default'] = FixturesPath;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FpbW9ycmlzLy5hdG9tL3BhY2thZ2VzL3NlbGVjdC10ZXh0LWJldHdlZW4tdGFncy9zcGVjL2NvbnN0YW50cy9maXh0dXJlcy1wYXRoLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7b0JBRWlCLE1BQU07Ozs7QUFGdkIsV0FBVyxDQUFDOztBQUlaLElBQU0sYUFBYSxHQUNmLGtCQUFLLE9BQU8sQ0FBQyxTQUFTLEVBQUUsYUFBYSxDQUFDLENBQUM7QUFDM0MsSUFBTSw2QkFBNkIsR0FDL0Isa0JBQUssT0FBTyxDQUFDLGFBQWEsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDOztJQUU3QixZQUFZO1dBQVosWUFBWTswQkFBWixZQUFZOzs7ZUFBWixZQUFZOztXQWNkLG9CQUFDLFlBQVksRUFBRTtBQUM3QixhQUFPLGtCQUFLLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLFlBQVksQ0FBQyxDQUFDO0tBQ3pEOzs7V0FDNkIsaUNBQUMsWUFBWSxFQUFFO0FBQzNDLGFBQU8sa0JBQUssT0FBTyxDQUFDLElBQUksQ0FBQyxpQ0FBaUMsRUFBRSxZQUFZLENBQUMsQ0FBQztLQUMzRTs7O1dBbEJ1QixhQUFhOzs7O1dBQ00sNkJBQTZCOzs7O1NBRS9DLGVBQUc7QUFDMUIsYUFBTyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0tBQ3ZDOzs7U0FDdUIsZUFBRztBQUN6QixhQUFPLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxZQUFZLENBQUMsQ0FBQztLQUNuRDs7O1NBQ3NCLGVBQUc7QUFDeEIsYUFBTyxJQUFJLENBQUMsdUJBQXVCLENBQUMsV0FBVyxDQUFDLENBQUM7S0FDbEQ7OztTQVprQixZQUFZOzs7cUJBQVosWUFBWSIsImZpbGUiOiIvaG9tZS9haW1vcnJpcy8uYXRvbS9wYWNrYWdlcy9zZWxlY3QtdGV4dC1iZXR3ZWVuLXRhZ3Mvc3BlYy9jb25zdGFudHMvZml4dHVyZXMtcGF0aC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnO1xuXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuY29uc3QgZGlyZWN0b3J5UGF0aFxuICA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLi9maXh0dXJlcycpO1xuY29uc3QgZGlyZWN0b3J5Rm9yQXV0b0dlbmVyYXRlZFBhdGhcbiAgPSBwYXRoLnJlc29sdmUoZGlyZWN0b3J5UGF0aCwgJ2F1dG8tZ2VuZXJhdGVkJyk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpeHR1cmVzUGF0aCB7XG4gIHN0YXRpYyBESVJFQ1RPUllfUEFUSCA9IGRpcmVjdG9yeVBhdGg7XG4gIHN0YXRpYyBESVJFQ1RPUllfRk9SX0FVVE9fR0VORVJBVEVEX1BBVEggPSBkaXJlY3RvcnlGb3JBdXRvR2VuZXJhdGVkUGF0aDtcblxuICBzdGF0aWMgZ2V0IHNhbXBsZVRleHRQYXRoKCkge1xuICAgIHJldHVybiB0aGlzLmFic29sdXRpZnkoJ3NhbXBsZS5odG1sJyk7XG4gIH1cbiAgc3RhdGljIGdldCBsYXJnZVRleHRQYXRoKCkge1xuICAgIHJldHVybiB0aGlzLmFic29sdXRpZnlBdXRvR2VuZXJhdGVkKCdsYXJnZS5odG1sJyk7XG4gIH1cbiAgc3RhdGljIGdldCBkZWVwVGV4dFBhdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuYWJzb2x1dGlmeUF1dG9HZW5lcmF0ZWQoJ2RlZXAuaHRtbCcpO1xuICB9XG5cbiAgc3RhdGljIGFic29sdXRpZnkocmVsYXRpdmVQYXRoKSB7XG4gICAgIHJldHVybiBwYXRoLnJlc29sdmUodGhpcy5ESVJFQ1RPUllfUEFUSCwgcmVsYXRpdmVQYXRoKTtcbiAgfVxuICBzdGF0aWMgYWJzb2x1dGlmeUF1dG9HZW5lcmF0ZWQocmVsYXRpdmVQYXRoKSB7XG4gICAgcmV0dXJuIHBhdGgucmVzb2x2ZSh0aGlzLkRJUkVDVE9SWV9GT1JfQVVUT19HRU5FUkFURURfUEFUSCwgcmVsYXRpdmVQYXRoKTtcbiAgfVxufVxuIl19